version: 2.1
# orbs:
#   docker: circleci/docker@1.0.1
jobs:
  test:
    working_directory: ~/app
    docker: 
      - image: circleci/node:latest    
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: |
          cat >> ~/.dockercfg <<EOF 
          {
            "https://index.docker.io/v1/": {
              "auth": "$DOCKER_AUTH",
              "email": "$DOCKER_EMAIL"
            }
          }
          EOF
      # - run: 'sudo npm install -g npm@latest'
      # - restore_cache:
      #     key: dependecy-cache-{{ checksum "package-lock.json" }}
      # - run: 'npm run initial' 

      # - save_cache:
      #     key: dependency-cache-{{ checksum "package-lock.json" }}
      #     paths:
      #       - ./node_modules
  docker-deploy-image:
    working_directory: ~/app
    docker: 
      - image: circleci/node:latest    
    steps:
      - setup_remote_docker
      - checkout
      # - docker/check
      # - docker/build:
      #     image: dillonkyle/node-dev-app
      # - docker/push:
      #     image: dillonkyle/node-dev-app
      - run: | 
          docker build dillonkyle/node-dev-app .
        # docker login -u $DOCKER_USER -p $DOCKER_PASS
        # docker push dillonkyle/node-dev-app
  deploy-aws:
    working_directory: ~/app
    docker:
      - image: circleci/python:latest
    steps:
      - checkout
      - run: 
          name: Installing AWSCLI
          command: 'sudo pip install awsebcli --upgrade'
      - run: 
          name: Create AWS credentials
          command: |
            mkdir ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile eb-cli]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
      - run:
          name: Deploy to EB if branch is Master
          command: |
            eb use node-dev-app --profile eb-cli
            eb deploy -v --staged --profile eb-cli
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - deploy-aws
      # - docker-deploy-image:
      #     requires:
      #       - test
      # - deploy-aws:
      #     requires:
      #       - test